// in west, east, vib, ug1,ug2, out west, east,vib,ug1,ug2
cr_count=[  

"01T16:00,00,00,00,0,0,0",
"01T16:10,373,248,40,7,32,3",
"01T16:21,477,594,59,15,50,5",
"01T16:30,579,779,72,26,61,8",
"01T16:45,775,1090,98,52,85,22",
"01T16:55,974,1320,134,71,106,25",
"01T17:07,1190,1710,172,115,135,38",
"01T17:20,1407,2170,253,137,165,47",
"01T17:46,1852,3096,305,182,244,56",
"01T18:27,2929,5144,742,456,738,372",
"01T18:49,3812,6555,849,547,831,388",
"01T19:14,4965,8086,997,625,917,393",
"01T19:33,6288,9283,1172,692,990,416",
"01T19:46,6788,9987,1236,731,1029,430",
"01T19:51,7423,10754,1309,772,1061,441",
"01T20:00,8058,11728,1445,806,1102,443",
"01T20:13,8803,12860,1580,858,1143,454",
"01T20:24,9606,13886,1704,902,1181,471",
"01T20:35,10431,15081,1824,963,1258,483",
"01T20:40,10828,15675,1892,990,1296,493",
"01T21:04,12753,18264,2179,1121,1384,525",
"01T21:31,15771,20986,2598,1334,1733,588",
"01T21:42,17083,22045,2701,1463,1898,611",
"01T22:02,19881,24167,3061,1773,2321,638",
"01T22:30,22395,26761,3461,2100,2813,716",
"01T22:41,23179,27645,3646,2317,3162,746",
"01T23:08,24823,30014,3970,2893,3866,802",
"01T23:30,25909,31668,4263,3365,4627,883",
"01T23:45,26713,32509,4412,3856,5331,954",
"01T24:00,27630,33151,4607,4593,6331,1007",
"02T00:15,28323,33780,4725,5565,7507,1082",
"02T00:45,29145,34739,4868,7438,9789,1274",
"02T01:08,29761,35524,4993,9910,12580,1444",
"02T01:45,30203,36421,5113,13657,15818,1698",
"02T02:15,30432,36895,5204,17026,19531,2045",
"02T02:45,30616,37181,5251,20338,23370,2539",
"02T03:15,30791,37467,5296,24313,27195,3224",
"02T03:45,30946,37637,5318,26854,29661,3985",
"02T04:00,31031,37790,5343,28668,31562,4572",
"02T04:15,31076,37844,5358,29509,32188,4680",
"02T06:00,0,0,0,0,0,0",
"02T14:00,0,0,0,0,0,0",
"02T16:00,0,0,0,0,0,0",
"02T16:16,154,219,60,11,19,6",
"02T16:32,375,443,89,27,37,17",
"02T16:45,523,575,103,44,45,21",
"02T16:58,818,895,174,56,65,31",
"02T17:15,1249,1272,258,84,95,42",
"02T17:30,1664,1625,329,114,108,56",
"02T17:48,2003,2412,403,143,140,70",
"02T18:00,2171,2889,477,159,161,77",
"02T18:16,2596,3630,581,190,194,88",
"02T18:25,2972,4137,635,205,225,103",
"02T18:34,3523,4688,742,231,249,112",
"02T18:45,4072,5198,852,279,277,126",
"02T18:50,4427,5588,919,309,292,136",
"02T19:05,5383,6693,1064,357,318,151",
"02T19:15,5912,7387,1160,387,368,157",
"02T19:32,7472,9010,1400,449,444,183",
"02T19:43,8640,10026,1541,483,478,213",
"02T19:49,9371,10750,1635,514,506,217",
"02T20:00,10684,11830,1854,571,559,232",
"02T20:15,12805,13418,2104,630,654,270",
"02T20:30,14777,15036,2436,716,801,311",
"02T20:45,16595,16314,2701,828,955,335",
"02T21:00,18230,17456,2991,906,1076,379",
"02T21:10,19537,18512,3258,1012,1175,418",
"02T21:15,20356,19181,3381,1073,1244,437",
"02T21:30,22498,20778,3710,1279,1422,495",
"02T21:45,24555,22278,3991,1428,1580,538",
"02T22:00,27319,24339,4477,1623,1867,580",
"02T22:17,30056,26148,5036,1872,2082,623",
"02T22:30,31967,27617,5434,2050,2298,662",
"02T22:45,33954,29049,5850,2351,2688,724",
"02T23:00,35867,30831,6467,2836,3364,839",
"02T23:10,36726,31637,6618,3119,3725,894",
"02T23:30,38430,33212,6969,3772,4688,1013",
"02T23:45,39897,34855,7345,4833,5762,1135",
"03T00:07,41518,36647,7776,6598,7565,1362",
"03T00:30,42897,38263,8115,8963,9510,1540",
"03T00:45,43572,39248,8295,10468,10788,1694",
"03T01:00,43870,39772,8388,11350,11606,1781",
"03T01:15,44574,41039,8589,14466,14425,2100",
"03T01:45,45028,41985,8743,18077,17808,2491",
"03T02:30,45670,42655,8837,25306,24522,2928",
"03T02:45,45909,42816,8869,28086,26929,3298",
"03T04:30,45909,42816,8869,45909,42816,8869",
"03T06:00,0,0,0,0,0,0",
"03T14:00,0,0,0,0,0,0",
"03T16:00,0,0,0,0,0,0",
"03T16:30,66,33,29,18,34,11",
"03T16:45,404,347,92,32,51,27",
"03T17:00,563,539,151,60,86,45",
"03T17:20,819,811,220,92,114,60",
"03T17:30,918,922,275,102,121,64",
"03T17:45,1118,1160,350,132,172,76",
"03T18:00,1409,1444,442,167,191,87",
"03T18:15,1693,1890,508,201,209,90",
"03T18:30,2039,2314,662,237,247,95",
"03T18:45,2441,2682,744,265,283,104",
"03T19:00,2878,3251,911,310,326,107",
"03T19:15,3530,3862,1066,348,351,116",
"03T19:30,4192,4590,1212,398,389,125",
"03T19:45,4792,5197,1392,421,406,130",
"03T20:00,5645,6108,1626,480,443,150",
"03T20:15,6440,7045,1804,531,487,167",
"03T20:30,7504,8113,2123,591,545,185",
"03T20:45,8407,8907,2319,638,603,196",
"03T21:00,9617,9943,2694,736,747,222",
"03T21:30,11608,12028,3254,990,980,300",
"03T21:45,12592,12879,3488,1074,1062,322",
"03T22:00,14125,14148,3843,1298,1223,358",
"03T22:19,15259,15499,4135,1494,1418,401",
"03T22:45,17185,17627,4553,1789,1793,476",
"03T23:00,18249,18906,4796,1962,2143,514",
"03T23:15,19216,19892,5042,2202,2607,580",
"03T23:30,19952,20691,5225,2525,3015,629",
"03T23:45,20766,21566,5424,3000,3562,700",
"03T24:00,21336,22296,5593,3428,4037,767",
"04T00:15,21729,22924,5752,3929,5001,859",
"04T00:30,22302,23601,5905,4899,5815,945",
"04T00:45,22717,24055,6014,5656,6460,1015",
"04T01:00,23110,24456,6089,6205,6933,1065",
"04T01:45,23822,25362,6320,8202,9520,1321",
"04T02:00,23965,25643,6366,9252,10867,1459",
"04T02:15,24021,25759,6423,10211,12113,1593",
"04T02:45,24182,24995,6469,12589,14636,1828",
"04T03:00,24322,26053,6507,14295,16268,2033",
"04T03:15,24462,26102,6529,15990,17735,2245",
"04T03:30,24540,26190,6548,17353,19646,2589",
  ]


//scans west, east, vib
ticket_data = [
"01T12:00,0,0,0",
"01T15:00,0,0,0",
]

/*
oldold_scans = [
  
  [
    "17T15:50","0",
    0,
    0
  ],
  [
    "17T16:00","834",
    0,
    0
  ],
  [
    "17T16:05","1732",
    0,
    0
  ],
  [
    "17T16:10","2485",
    0,
    0
  ],
  [
    "17T16:15","2907",
    0,
    0
  ],
  [
    "17T16:20","3420",
    0,
    0
  ],
  [
    "17T16:25","3855",
    0,
    0
  ],
  [
    "17T16:30","4399",
    0,
    0
  ],
  [
    "17T16:35","5107",
    0,
    0
  ],
  [
    "17T16:40","5919",
    0,
    0
  ],
  [
    "17T16:45","6752",
    0,
    0
  ],
  [
    "17T16:50","7577",
    0,
    0
  ],
  [
    "17T16:55","8484",
    0,
    0
  ],
  [
    "17T17:00","9324",
    0,
    0
  ],
  [
    "17T17:05","10325",
    0,
    0
  ],
  [
    "17T17:10","11367",
    0,
    0
  ],
  [
    "17T17:15","12371",
    0,
    0
  ],
  [
    "17T17:20","13459",
    0,
    0
  ],
  [
    "17T17:25","14478",
    0,
    0
  ],
  [
    "17T17:30","15693",
    0,
    0
  ],
  [
    "17T17:35","16690",
    0,
    0
  ],
  [
    "17T17:40","17780",
    0,
    0
  ],
  [
    "17T17:45","18860",
    0,
    0
  ],
  [
    "17T17:50","20212",
    0,
    0
  ],
  [
    "17T17:55","21398",
    0,
    0
  ],
  [
    "17T18:00","22635",
    0,
    0
  ],
  [
    "17T18:05","23702",
    0,
    0
  ],
  [
    "17T18:10","24959",
    0,
    0
  ],
  [
    "17T18:15","26209",
    0,
    0
  ],
  [
    "17T18:20","27575",
    0,
    0
  ],
  [
    "17T18:25","28677",
    0,
    0
  ],
  [
    "17T18:30","29882",
    0,
    0
  ],
  [
    "17T18:35","31041",
    0,
    0
  ],
  [
    "17T18:40","32126",
    0,
    0
  ],
  [
    "17T18:45","33342",
    0,
    0
  ],
  [
    "17T18:50","34445",
    0,
    0
  ],
  [
    "17T18:55","35721",
    0,
    0
  ],
  [
    "17T19:00","37055",
    0,
    0
  ],
  [
    "17T19:05","38496",
    0,
    0
  ],
  [
    "17T19:10","39973",
    0,
    0
  ],
  [
    "17T19:15","41524",
    0,
    0
  ],
  [
    "17T19:20","43007",
    0,
    0
  ],
  [
    "17T19:25","44399",
    0,
    0
  ],
  [
    "17T19:30","45921",
    0,
    0
  ],
  [
    "17T19:35","47315",
    0,
    0
  ],
  [
    "17T19:40","48607",
    0,
    0
  ],
  [
    "17T19:45","50073",
    0,
    0
  ],
  [
    "17T19:50","51537",
    0,
    0
  ],
  [
    "17T19:55","52820",
    0,
    0
  ],
  [
    "17T20:00","54143",
    0,
    0
  ],
  [
    "17T20:05","55347",
    0,
    0
  ],
  [
    "17T20:10","56599",
    0,
    0
  ],
  [
    "17T20:15","58078",
    0,
    0
  ],
  [
    "17T20:20","59689",
    0,
    0
  ],
  [
    "17T20:25","61327",
    0,
    0
  ],
  [
    "17T20:30","62803",
    0,
    0
  ],
  [
    "17T20:35","64172",
    0,
    0
  ],
  [
    "17T20:40","65601",
    0,
    0
  ],
  [
    "17T20:45","66996",
    0,
    0
  ],
  [
    "17T20:50","68295",
    0,
    0
  ],
  [
    "17T20:55","69541",
    0,
    0
  ],
  [
    "17T21:00","70886",
    0,
    0
  ],
  [
    "17T21:05","72195",
    0,
    0
  ],
  [
    "17T21:10","73362",
    0,
    0
  ],
  [
    "17T21:15","74402",
    0,
    0
  ],
  [
    "17T21:20","75424",
    0,
    0
  ],
  [
    "17T21:25","76319",
    0,
    0
  ],
  [
    "17T21:30","77278",
    0,
    0
  ],
  [
    "17T21:35","78168",
    0,
    0
  ],
  [
    "17T21:40","78980",
    0,
    0
  ],
  [
    "17T21:45","79926",
    0,
    0
  ],
  [
    "17T21:50","80811",
    0,
    0
  ],
  [
    "17T21:55","81770",
    0,
    0
  ],
  [
    "17T22:00","82769",
    0,
    0
  ],
  [
    "17T22:05","83771",
    0,
    0
  ],
  [
    "17T22:10","84708",
    0,
    0
  ],
  [
    "17T22:15","85599",
    0,
    0
  ],
  [
    "17T22:20","86432",
    0,
    0
  ],
  [
    "17T22:25","87275",
    0,
    0
  ],
  [
    "17T22:30","88192",
    0,
    0
  ],
  [
    "17T22:35","89146",
    0,
    0
  ],
  [
    "17T22:40","89966",
    0,
    0
  ],
  [
    "17T22:45","90772",
    0,
    0
  ],
  [
    "17T22:50","91516",
    0,
    0
  ],
  [
    "17T22:55","92252",
    0,
    0
  ],
  [
    "17T23:00","92890",
    0,
    0
  ],
  [
    "17T23:05","93326",
    0,
    0
  ],
  [
    "17T23:10","93840",
    0,
    0
  ],
  [
    "17T23:15","94288",
    0,
    0
  ],
  [
    "17T23:20","94727",
    0,
    0
  ],
  [
    "17T23:25","95031",
    0,
    0
  ],
  [
    "17T23:30","95435",
    0,
    0
  ],
  [
    "17T23:35","95639",
    0,
    0
  ],
  [
    "18T00:04","97665",
    0,
    0
  ],
  [
    "18T00:12","98033",
    0,
    0
  ],
  [
    "18T00:29","98694",
    0,
    0
  ],
  [
    "18T00:35","100533",
    0,
    0
  ],
  [
    "18T01:09","100000",
    0,
    0
  ]

]
*/
// lesen des datums in gettime
for (i=0;i<cr_count.length;i++){
  cr_count[i] = cr_count[i].split(",")
  temp = new Date("2022-12-"+ cr_count[i][0])
  temp = temp.getTime()
  cr_count[i][0] = temp
}

// sortieren
cr_count.sort( (a, b) => {
  return a[0] - b[0]
})
// lesen des datums in gettime
for (i=0;i<ticket_data.length;i++){
  ticket_data[i] = ticket_data[i].split(",")
   temp = new Date("2022-12-"+ ticket_data[i][0])
  // temp = temp.getTime()+(10*24*60*60*1000)
  ticket_data[i][0] = temp
}

// sortieren
ticket_data.sort( (a, b) => {
  return a[0] - b[0]
})

temp_arr = {time:[],tot:[],west:[],east:[],vib:[]}
for (i=0;i<ticket_data.length;i++){
  let temp12 = new Date()
  temp12.setTime( ticket_data[i][0])
  temp_arr.time.push(temp12)
  temp_arr.tot.push((parseInt(ticket_data[i][1])+parseInt(ticket_data[i][2])+parseInt(ticket_data[i][3])))
  temp_arr.west.push(parseInt(ticket_data[i][1]))
  temp_arr.east.push(parseInt(ticket_data[i][2]))
  temp_arr.vib.push(parseInt(ticket_data[i][3]))
}
ticket_data = temp_arr

temp_arr = {time:[],in_tot:[],out_tot:[],inflowrate:[],ingress:[],dif_tot:[],in_west:[],in_east:[],in_vib:[],in_ug:[],out_west:[],out_east:[],out_vib:[],out_ug:[]}
for (i=0;i<cr_count.length;i++){
  let temp12 = new Date()
  temp12.setTime( cr_count[i][0])
  temp_arr.time.push(temp12)
  temp_arr.in_tot.push((parseInt(cr_count[i][1])+parseInt(cr_count[i][2])+parseInt(cr_count[i][3])))
  temp_arr.out_tot.push((parseInt(cr_count[i][4])+parseInt(cr_count[i][5])+parseInt(cr_count[i][6])))
  temp_arr.dif_tot.push((parseInt(cr_count[i][1])+parseInt(cr_count[i][2])+parseInt(cr_count[i][3]))-(parseInt(cr_count[i][4])+parseInt(cr_count[i][5])+parseInt(cr_count[i][6])))
  temp_arr.in_west.push(parseInt(cr_count[i][1]))
  temp_arr.in_east.push(parseInt(cr_count[i][2]))
  temp_arr.in_vib.push(parseInt(cr_count[i][3]))
  temp_arr.out_west.push(parseInt(cr_count[i][4]))
  temp_arr.out_east.push(parseInt(cr_count[i][5]))
if (i>0){temp_arr.inflowrate.push(
    (temp_arr.dif_tot[i]- temp_arr.dif_tot[i-1])/
     (         (temp_arr.time[i].getTime()-temp_arr.time[i-1].getTime())        /(1000*60*15)      ))}else{temp_arr.inflowrate.push(null)}

     if (i>0){temp_arr.ingress.push(Math.max(0,
      (temp_arr.in_tot[i]- temp_arr.in_tot[i-1])/
       (         (temp_arr.time[i].getTime()-temp_arr.time[i-1].getTime())        /(1000*60*15)      )))}

else{temp_arr.ingress.push(null)}

  temp_arr.out_vib.push(parseInt(cr_count[i][6]))

  //temp_arr.vib.push(parseInt(cr_count[i][3]))
  // hier folg ug rotation
  //temp_arr.out_ug1.push(parseInt(cr_count[i][9]))

}

cr_count = temp_arr
console.log(cr_count.inflowrate)
console.log(cr_count.time)